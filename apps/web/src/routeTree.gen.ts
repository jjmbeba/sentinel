/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgetPasswordRouteImport } from './routes/(auth)/forget-password'
import { Route as authResetPasswordTokenRouteImport } from './routes/(auth)/reset-password.$token'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgetPasswordRoute = authForgetPasswordRouteImport.update({
  id: '/(auth)/forget-password',
  path: '/forget-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authResetPasswordTokenRoute = authResetPasswordTokenRouteImport.update({
  id: '/(auth)/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRoute
  '/forget-password': typeof authForgetPasswordRoute
  '/login': typeof authLoginRoute
  '/sign-up': typeof authSignUpRoute
  '/reset-password/$token': typeof authResetPasswordTokenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRoute
  '/forget-password': typeof authForgetPasswordRoute
  '/login': typeof authLoginRoute
  '/sign-up': typeof authSignUpRoute
  '/reset-password/$token': typeof authResetPasswordTokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRoute
  '/(auth)/forget-password': typeof authForgetPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(auth)/reset-password/$token': typeof authResetPasswordTokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forget-password'
    | '/login'
    | '/sign-up'
    | '/reset-password/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forget-password'
    | '/login'
    | '/sign-up'
    | '/reset-password/$token'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/(auth)/forget-password'
    | '/(auth)/login'
    | '/(auth)/sign-up'
    | '/(auth)/reset-password/$token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRoute
  authForgetPasswordRoute: typeof authForgetPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authSignUpRoute: typeof authSignUpRoute
  authResetPasswordTokenRoute: typeof authResetPasswordTokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forget-password': {
      id: '/(auth)/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof authForgetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/reset-password/$token': {
      id: '/(auth)/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof authResetPasswordTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRoute,
  authForgetPasswordRoute: authForgetPasswordRoute,
  authLoginRoute: authLoginRoute,
  authSignUpRoute: authSignUpRoute,
  authResetPasswordTokenRoute: authResetPasswordTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
